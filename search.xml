<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>大数据之Hadoop</title>
      <link href="/2022/06/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%B9%8BHadoop/"/>
      <url>/2022/06/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%B9%8BHadoop/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Hadoop介绍"><a href="#1-Hadoop介绍" class="headerlink" title="1. Hadoop介绍"></a>1. Hadoop介绍</h3><ul><li><p>狭义上Hadoop指的是Apache软件基金会的一款开源软件。</p></li><li><p>用java语言实现，开源的。允许用户使用简单的编程模型实现跨机器集群对海量数据进行分布式计算处理。</p></li><li><p>Hadoop核心组件</p><ul><li><p>Hadoop HDFS （分布式文件存储系统）︰解决海量数据存储。</p></li><li><p>Hadoop YARN（集群资源管理和任务调度框架）︰解决资源任务调度。</p></li><li><p>Hadoop MapReduce (分布式计算框架）︰解决海量数据计算。是一个计算框架，没有集群的说法。</p></li></ul></li><li><p>官网</p><ul><li><a href="">http: // hadoop. apache.org/</a></li></ul></li></ul><hr><h3 id="2-Hadoop特点"><a href="#2-Hadoop特点" class="headerlink" title="2. Hadoop特点"></a>2. Hadoop特点</h3><ol><li><p><strong>扩容能力（scalability）</strong></p><p>Hadoop是在可用的计算机集群间分配数据并完成计算任务的，这些集群可方便灵活的方式扩展到数以千计的节点。</p></li><li><p><strong>成本低(Economical)</strong></p><p>Hadoop集群允许通过部署普通廉价的机器组成集群来处理大数据，以至于成本很低。看重的是集群整体能力。</p></li><li><p><strong>效率高(efficiency)</strong></p><p>通过并发数据，Hadoop可以在节点之间动态并行的移动数据，使得速度非常快。</p></li><li><p><strong>可靠性(reliability)</strong></p><p>能自动维护数据的多份复制，并且在任务失败后能自动地重新部署( redeploy )计算任务。所以Hadoop的按位存储和处理数据的能力值得人们信赖。</p></li></ol><h3 id="3-Hadoop集群整体概述"><a href="#3-Hadoop集群整体概述" class="headerlink" title="3. Hadoop集群整体概述"></a>3. Hadoop集群整体概述</h3><ul><li><p>Hadoop集群包括两个集群：<strong>HDFS集群、YARN集群</strong>。</p><ul><li><strong>HDFS集群</strong>：主要负责分布式存储。有三个角色，分别为：主角色(NameNode，NN)，从角色(DataNode, DN)，主角色辅助角色(SecondaryNameNode, SNN）。</li><li><strong>YARN集群</strong>：主要负责资源管理、调度。有两个角色，分别为: 主角色(ResourceManager，RM)，从角色(NodeManager, NM)。</li></ul></li><li><p>两个集群逻辑上是分离的，物理上在一起的。</p></li><li><p>两个集群都是标准的主从架构集群。</p></li></ul><p><img src="D:\blog\source_posts\大数据之Hadoop\image-20220625162537568.png" alt="image-20220625162537568"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis数据库</title>
      <link href="/2022/06/01/Redis%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2022/06/01/Redis%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Redis简介"><a href="#1-Redis简介" class="headerlink" title="1. Redis简介"></a>1. Redis简介</h2><h2 id="2-Redis安装"><a href="#2-Redis安装" class="headerlink" title="2. Redis安装"></a>2. Redis安装</h2><h2 id="3-Redis常用命令"><a href="#3-Redis常用命令" class="headerlink" title="3. Redis常用命令"></a>3. Redis常用命令</h2><ul><li><strong>select ：</strong> 选择数据库。如：select 0; select 15。</li><li><strong>set :</strong>  设置键值。如：set key1 value1; set key2 value2。</li><li><strong>keys * ：</strong> 查看当前库中所有的键值。</li><li><strong>get key :</strong> 根据键获取对应的值。如：get key1;</li><li><strong>exists key ：</strong> 判断当前键是否存在，0 不存在；1 存在。</li><li><strong>del key :</strong>  删除当前库中的键。</li><li>**type key : ** 查看key类型。</li><li><strong>expire key <time> :</strong>  设置键的过期时间。默认单位为秒。如： expire key1 10;</li><li><strong>ttl key :</strong> 查看键剩余的过期时间。-1 表示永不过期；-2表示已过期。</li><li>**dbsize : ** 查看当前库中的键的数量。</li><li>**flushdb : ** 清空当前库中所有的键。</li><li>**flushall : ** 清空所有的库中的数据。</li></ul><h2 id="4-Redis中常用的数据类型"><a href="#4-Redis中常用的数据类型" class="headerlink" title="4. Redis中常用的数据类型"></a>4. Redis中常用的数据类型</h2><ul><li>字符串(String)</li><li>列表(List)</li><li>集合(Set)</li><li>哈希(Hash)</li><li>有序集合(ZSet)</li></ul><hr><h3 id="4-1-String-字符串"><a href="#4-1-String-字符串" class="headerlink" title="4.1 String 字符串"></a>4.1 String 字符串</h3><h4 id="4-1-1-简介"><a href="#4-1-1-简介" class="headerlink" title="4.1.1 简介"></a>4.1.1 简介</h4><ul><li>String类型是Redis最基本的类型，存储的类型是二进制安全的，可以存储任意类型的数据，value的最大存储512M。</li></ul><h4 id="4-1-2-数据结构类型？"><a href="#4-1-2-数据结构类型？" class="headerlink" title="4.1.2 数据结构类型？"></a>4.1.2 数据结构类型？</h4><hr><h3 id="4-2-List-列表"><a href="#4-2-List-列表" class="headerlink" title="4.2 List 列表"></a>4.2 List 列表</h3><h4 id="4-2-1-简介"><a href="#4-2-1-简介" class="headerlink" title="4.2.1 简介"></a>4.2.1 简介</h4><ul><li>List 列表是最简单的字符串列表，插入是有序的，头部和尾部都可以添加元素。</li></ul><h4 id="4-2-1-数据结构？"><a href="#4-2-1-数据结构？" class="headerlink" title="4.2.1 数据结构？"></a>4.2.1 数据结构？</h4><ul><li>底层实现为双向链表，对两端的可操作性高，通过索引操作中间元素性能较差。</li></ul><hr><h3 id="4-3-Set-集合"><a href="#4-3-Set-集合" class="headerlink" title="4.3 Set 集合"></a>4.3 Set 集合</h3><h4 id="4-3-1-简介"><a href="#4-3-1-简介" class="headerlink" title="4.3.1 简介"></a>4.3.1 简介</h4><ul><li>Set集合也是提供一个列表功能，无需的，可以自动去重，不允许存储重复的数据，在添加，删除，查找效率高，时间复杂度O(1)。</li></ul><hr><h3 id="4-3-Hash-哈希"><a href="#4-3-Hash-哈希" class="headerlink" title="4.3 Hash 哈希"></a>4.3 Hash 哈希</h3><h4 id="4-3-1-简介-1"><a href="#4-3-1-简介-1" class="headerlink" title="4.3.1 简介"></a>4.3.1 简介</h4><h4 id="4-3-2-数据结构"><a href="#4-3-2-数据结构" class="headerlink" title="4.3.2 数据结构"></a>4.3.2 数据结构</h4><ul><li>Hash类型的数据结构分为两种：zipList(压缩列表)，hashTable(哈希表)。当filed-value长度较短且数量较少时，使用zipList,否则使用hashTable。</li></ul><hr><h3 id="4-4-ZSet有序集合"><a href="#4-4-ZSet有序集合" class="headerlink" title="4.4 ZSet有序集合"></a>4.4 ZSet有序集合</h3><h4 id="4-4-1-简介"><a href="#4-4-1-简介" class="headerlink" title="4.4.1 简介"></a>4.4.1 简介</h4><hr><h3 id="Redis的持久化"><a href="#Redis的持久化" class="headerlink" title="Redis的持久化"></a>Redis的持久化</h3><ul><li>Redis的持久化方式分为两种分别为：RDB（Redis DataBase）和 AOF（Append Only File）</li></ul><h4 id="RDB方式"><a href="#RDB方式" class="headerlink" title="RDB方式"></a>RDB方式</h4><ul><li>在指定的时间间隔内将内存中的数据集快照写入硬盘保存。（每隔一段时间就保存数据）</li></ul><h5 id="执行方式"><a href="#执行方式" class="headerlink" title="执行方式"></a>执行方式</h5><ul><li>Redis主线程会fork一个子线程单独进行持久化工作，将数据写入到一个临时文件中（dump.rdb），待持久化操作完成后，临时文件将覆盖旧的持久化文件。</li></ul><h4 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h4>]]></content>
      
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序算法</title>
      <link href="/2022/05/13/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
      <url>/2022/05/13/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>easyExcel导出</title>
      <link href="/2022/04/28/easyExcel%E5%AF%BC%E5%87%BA/"/>
      <url>/2022/04/28/easyExcel%E5%AF%BC%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h4 id="1-easyEexcel策略模式导出数据"><a href="#1-easyEexcel策略模式导出数据" class="headerlink" title="1.easyEexcel策略模式导出数据"></a>1.easyEexcel策略模式导出数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ExportProcessor</span>&lt;<span class="title">E</span>, <span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取并组装导出的数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> searchDTO 导出数据查询条件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">getExportData</span><span class="params">(E searchDTO)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定导出文件名称</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">exportFileName</span><span class="params">(E searchDTO)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定导出文件sheet名称</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">exportSheetName</span><span class="params">(E searchDTO)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据搜索条件字符串转为搜索对象DTO</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> searchCondition</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">E <span class="title">getSearchDTO</span><span class="params">(String searchCondition)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定导出的模版类型</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Class&lt;T&gt; <span class="title">getExportTemplateClass</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseExportProcessor</span>&lt;<span class="title">E</span>, <span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">ExportProcessor</span>&lt;<span class="title">E</span>, <span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ExportProcessorService exportProcessorService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">registerProcesser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        exportProcessorService.register(getProcessorType().getModuleCode(), <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">protected</span> ModuleType <span class="title">getProcessorType</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExportProcessorService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> OssFileService ossFileService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件导出处理器注册容器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, ExportProcessor&gt; exportProcessors = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ExportProcessorService</span><span class="params">(OssFileService ossFileService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ossFileService = ossFileService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册文件导出处理器</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> moduleType</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> processor</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">register</span><span class="params">(String moduleType, BaseExportProcessor processor)</span> </span>&#123;</span><br><span class="line">        ExportProcessor previousReleaseProcessor = exportProcessors.put(moduleType, processor);</span><br><span class="line">        <span class="keyword">if</span> (previousReleaseProcessor != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;注册器检测到相同的模块类型，请保证模块类型的唯一性。冲突的模块类型为:&quot;</span> + moduleType);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">Map&lt;String, String&gt; <span class="title">export</span><span class="params">(String moduleCode, E searchDTO)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; resultMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        ExportProcessor exportProcessor = exportProcessors.get(moduleCode);</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        EasyExcel.write(out, exportProcessor.getExportTemplateClass())</span><br><span class="line"><span class="comment">//                .registerWriteHandler(new StoreDataInstCellWriteHandler()) //内容策略</span></span><br><span class="line">                .registerWriteHandler(<span class="keyword">new</span> LongestMatchColumnWidthStyleStrategy())</span><br><span class="line">                .excelType(ExcelTypeEnum.XLS)</span><br><span class="line">                .sheet(exportProcessor.exportSheetName(searchDTO))</span><br><span class="line">                .doWrite(Lists.newArrayList(exportProcessor.getExportData(searchDTO)));</span><br><span class="line">        String fileName = exportProcessor.exportFileName(searchDTO);</span><br><span class="line">        ossFileService.upload(out.toByteArray(), fileName);</span><br><span class="line">        String url = ossFileService.download(fileName).getResponse().getUri();</span><br><span class="line">        resultMap.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;10000&quot;</span>);</span><br><span class="line">        resultMap.put(<span class="string">&quot;url&quot;</span>, url);</span><br><span class="line">        <span class="keyword">return</span> resultMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">Map&lt;String, String&gt; <span class="title">exportForDynamicHead</span><span class="params">(String moduleCode, E searchDTO, Class head)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; resultMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        ExportProcessor exportProcessor = exportProcessors.get(moduleCode);</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        EasyExcel.write(out, exportProcessor.getExportTemplateClass())</span><br><span class="line">                .head(head)</span><br><span class="line"><span class="comment">//                .registerWriteHandler(new StoreDataInstCellWriteHandler()) //内容策略</span></span><br><span class="line">                .registerWriteHandler(<span class="keyword">new</span> LongestMatchColumnWidthStyleStrategy())</span><br><span class="line">                .excelType(ExcelTypeEnum.XLS)</span><br><span class="line">                .sheet(exportProcessor.exportSheetName(searchDTO))</span><br><span class="line">                .doWrite(Lists.newArrayList(exportProcessor.getExportData(searchDTO)));</span><br><span class="line"></span><br><span class="line">        String fileName = exportProcessor.exportFileName(searchDTO);</span><br><span class="line">        ossFileService.upload(out.toByteArray(), fileName);</span><br><span class="line">        String url = ossFileService.download(fileName).getResponse().getUri();</span><br><span class="line">        resultMap.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;10000&quot;</span>);</span><br><span class="line">        resultMap.put(<span class="string">&quot;url&quot;</span>, url);</span><br><span class="line">        <span class="keyword">return</span> resultMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">Map&lt;String, String&gt; <span class="title">exportForDynamicHead</span><span class="params">(String moduleCode, E searchDTO, List&lt;List&lt;String&gt;&gt; head)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; resultMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        ExportProcessor exportProcessor = exportProcessors.get(moduleCode);</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        EasyExcel.write(out, exportProcessor.getExportTemplateClass())</span><br><span class="line">                .head(head)</span><br><span class="line"><span class="comment">//                .registerWriteHandler(new StoreDataInstCellWriteHandler()) //内容策略</span></span><br><span class="line">                .registerWriteHandler(<span class="keyword">new</span> LongestMatchColumnWidthStyleStrategy())</span><br><span class="line">                .excelType(ExcelTypeEnum.XLS)</span><br><span class="line">                .sheet(exportProcessor.exportSheetName(searchDTO))</span><br><span class="line">                .doWrite(Lists.newArrayList(exportProcessor.getExportData(searchDTO)));</span><br><span class="line"></span><br><span class="line">        String fileName = exportProcessor.exportFileName(searchDTO);</span><br><span class="line">        ossFileService.upload(out.toByteArray(), fileName);</span><br><span class="line">        String url = ossFileService.download(fileName).getResponse().getUri();</span><br><span class="line">        resultMap.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;10000&quot;</span>);</span><br><span class="line">        resultMap.put(<span class="string">&quot;url&quot;</span>, url);</span><br><span class="line">        <span class="keyword">return</span> resultMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">ModuleType</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    NOT_PARTICIPATE_GOODS(<span class="string">&quot;not_participate_goods&quot;</span>, <span class="number">1</span>, <span class="string">&quot;不参与调拨/退仓商品设置&quot;</span>),</span><br><span class="line">    SMART_ALLOCAT_MAIN_BILL(<span class="string">&quot;smart_allocat_main_bill&quot;</span>, <span class="number">1</span>, <span class="string">&quot;智能统筹调拨系统-主单&quot;</span>),</span><br><span class="line">    SMART_ALLOCAT_DETAIL_BILL(<span class="string">&quot;smart_allocat_detail_bill&quot;</span>, <span class="number">1</span>, <span class="string">&quot;智能统筹调拨系统-明细&quot;</span>),</span><br><span class="line">    FOLLOW_HEART_BUSINESS_INFO(<span class="string">&quot;follow_heart_business_info&quot;</span>, <span class="number">1</span>, <span class="string">&quot;随心看商户门店基础信息&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String moduleCode;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 模块类型， 1为单sheet，2为多sheet</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer moduleType;</span><br><span class="line">    <span class="keyword">private</span> String moduleName;</span><br><span class="line"></span><br><span class="line">    ModuleType(String moduleCode, Integer moduleType, String moduleName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.moduleCode = moduleCode;</span><br><span class="line">        <span class="keyword">this</span>.moduleType = moduleType;</span><br><span class="line">        <span class="keyword">this</span>.moduleName = moduleName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getModuleCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> moduleCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getModuleType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> moduleType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getModuleName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> moduleName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-使用方式"><a href="#2-使用方式" class="headerlink" title="2.使用方式"></a>2.使用方式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BusinessInfoExportProcessor</span> <span class="keyword">extends</span> <span class="title">BaseExportProcessor</span>&lt;<span class="title">BatchBusinessInfoReqDTO</span>, <span class="title">BusinessInfoExportEntity</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> BusinessInfoSourceService businessInfoSourceService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HydeeSelectService hydeeSelectService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BusinessInfoExportProcessor</span><span class="params">(BusinessInfoSourceService businessInfoSourceService,</span></span></span><br><span class="line"><span class="params"><span class="function">                                       HydeeSelectService hydeeSelectService)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.businessInfoSourceService = businessInfoSourceService;</span><br><span class="line">        <span class="keyword">this</span>.hydeeSelectService = hydeeSelectService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> ModuleType <span class="title">getProcessorType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ModuleType.FOLLOW_HEART_BUSINESS_INFO;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;BusinessInfoExportEntity&gt; <span class="title">getExportData</span><span class="params">(BatchBusinessInfoReqDTO searchDTO)</span> </span>&#123;</span><br><span class="line">        List&lt;BusinessInfoRepoDTO&gt; businessInfosEntity = businessInfoSourceService.queryExportBusinessInfo(searchDTO);</span><br><span class="line">        <span class="comment">//查询集团下的企业信息</span></span><br><span class="line">        List&lt;CompanyInfo&gt; companyInfos = hydeeSelectService.queryTopTableCompanyInfoByGroupId(searchDTO.getGroupId());</span><br><span class="line">        <span class="comment">//查询集团的片区信息</span></span><br><span class="line">        List&lt;RegionInfo&gt; regionInfos = hydeeSelectService.queryRegionInfoByGroupId(searchDTO.getGroupId());</span><br><span class="line">        <span class="comment">//封装数据</span></span><br><span class="line">        <span class="keyword">return</span> BusinessInfoExportEntity.convert(businessInfosEntity, companyInfos, regionInfos);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">exportFileName</span><span class="params">(BatchBusinessInfoReqDTO searchDTO)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;门店基础信息数据.xls&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">exportSheetName</span><span class="params">(BatchBusinessInfoReqDTO searchDTO)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;门店基础信息数据&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BatchBusinessInfoReqDTO <span class="title">getSearchDTO</span><span class="params">(String searchCondition)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Class&lt;BusinessInfoExportEntity&gt; <span class="title">getExportTemplateClass</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BusinessInfoExportEntity.class;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> easyExcel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AOP实现多数据源切换.md</title>
      <link href="/2022/04/28/AOP%E5%AE%9E%E7%8E%B0%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E5%88%87%E6%8D%A2-md/"/>
      <url>/2022/04/28/AOP%E5%AE%9E%E7%8E%B0%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E5%88%87%E6%8D%A2-md/</url>
      
        <content type="html"><![CDATA[<h4 id="1-实例数据源"><a href="#1-实例数据源" class="headerlink" title="1.实例数据源"></a>1.实例数据源</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">business:</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://ip:3306/hydee_dc_business_test?allowMultiQueries=true&amp;serverTimezone=Asia/Shanghai&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">hydee_dc_business_test</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">WIAozx0ak3Hk</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">dw:</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://ip:9030/doris_hydee_dw?allowMultiQueries=true&amp;serverTimezone=Asia/Shanghai&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">dorisdb_select</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">O&amp;pH32e&amp;^!DJS5vI</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">seal:</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://ip:3306/hydee_bi_seal?allowMultiQueries=true&amp;serverTimezone=Asia/Shanghai&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">seal</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">seal123456</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">50</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">validation-query:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br></pre></td></tr></table></figure><h4 id="2-定义AOP注解"><a href="#2-定义AOP注解" class="headerlink" title="2.定义AOP注解"></a>2.定义AOP注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> DataSource &#123;</span><br><span class="line">    <span class="function">DataSourceEnum <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> DataSourceEnum.BUSSINESS</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Order(-1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(value = &quot;@annotation(DataSource)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">doAround</span><span class="params">(ProceedingJoinPoint pjp)</span> </span>&#123;</span><br><span class="line">        MethodSignature methodSignature = (MethodSignature) pjp.getSignature();</span><br><span class="line">        Method method = methodSignature.getMethod();</span><br><span class="line">        DataSource typeAnno = method.getAnnotation(DataSource.class);</span><br><span class="line">        DataSourceEnum sourceEnum = typeAnno.value();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置数据源标志，spring获取这些标志之后就会获取对象的数据源，其实就bean的实例名称</span></span><br><span class="line">        <span class="keyword">if</span> (sourceEnum == DataSourceEnum.BUSSINESS) &#123;</span><br><span class="line">            DataSourceContextHolder.setDbType(DataSourceEnum.BUSSINESS);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sourceEnum == DataSourceEnum.DW) &#123;</span><br><span class="line">            DataSourceContextHolder.setDbType(DataSourceEnum.DW);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sourceEnum == DataSourceEnum.SEAL) &#123;</span><br><span class="line">            DataSourceContextHolder.setDbType(DataSourceEnum.SEAL);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Object result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = pjp.proceed();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;切换数据源发生异常&quot;</span>,throwable);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            DataSourceContextHolder.clearDbType();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceContextHolder</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;String&gt; CONTEXT_HOLDER = <span class="keyword">new</span> InheritableThreadLocal&lt;&gt;();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setDbType</span><span class="params">(DataSourceEnum dbTypeEnum)</span> </span>&#123;</span><br><span class="line">        CONTEXT_HOLDER.set(dbTypeEnum.getValue());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取得当前数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDbType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> CONTEXT_HOLDER.get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清除上下文数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clearDbType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CONTEXT_HOLDER.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultipleDataSource</span> <span class="keyword">extends</span> <span class="title">AbstractRoutingDataSource</span> </span>&#123;</span><br><span class="line">    <span class="comment">//取得当前使用哪个数据源</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Object <span class="title">determineCurrentLookupKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DataSourceContextHolder.getDbType();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan( basePackages = &#123;&quot;cn.hydee.datacenter.business.*.repo&quot;,&quot;cn.hydee.datacenter.business.*.mapper&quot;&#125;)</span> <span class="comment">//dao和mapper文件路径</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatiesPlusConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 分页插件，自动识别数据库类型</span></span><br><span class="line"><span class="comment">     * 多租户，请参考官网【插件扩展】</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 开启 PageHelper 的支持</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setL(true);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义db1</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;business&quot;)</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource.business&quot;)</span><span class="comment">//与配置文件中的层次结构相同</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DruidDataSource <span class="title">db1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DruidDataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;dw&quot;)</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource.dw&quot; )</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DruidDataSource <span class="title">db2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DruidDataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;seal&quot;)</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource.seal&quot; )</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DruidDataSource <span class="title">db3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DruidDataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Bean(name = &quot;h3&quot;)</span></span><br><span class="line"><span class="comment">//    @ConfigurationProperties(prefix = &quot;spring.datasource.h3&quot; )</span></span><br><span class="line"><span class="comment">//    public DruidDataSource db4() &#123;</span></span><br><span class="line"><span class="comment">//        return DruidDataSourceBuilder.create().build();</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 动态数据源配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MultipleDataSource <span class="title">multipleDataSource</span><span class="params">(<span class="meta">@Qualifier(&quot;business&quot;)</span> DruidDataSource db1,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                 <span class="meta">@Qualifier(&quot;dw&quot;)</span> DruidDataSource db2,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                 <span class="meta">@Qualifier(&quot;seal&quot;)</span> DruidDataSource db3)</span> </span>&#123;</span><br><span class="line">        MultipleDataSource multipleDataSource = <span class="keyword">new</span> MultipleDataSource();</span><br><span class="line">        Map&lt; Object, Object &gt; targetDataSources = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        targetDataSources.put(DataSourceEnum.BUSSINESS.getValue(), db1);</span><br><span class="line">        targetDataSources.put(DataSourceEnum.DW.getValue(), db2);</span><br><span class="line">        targetDataSources.put(DataSourceEnum.SEAL.getValue(), db3);</span><br><span class="line">        <span class="comment">//添加数据源</span></span><br><span class="line">        multipleDataSource.setTargetDataSources(targetDataSources);</span><br><span class="line">        <span class="comment">//设置默认数据源</span></span><br><span class="line">        multipleDataSource.setDefaultTargetDataSource(db1);</span><br><span class="line">        <span class="keyword">return</span> multipleDataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;sqlSessionFactory&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">sqlSessionFactory</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        MybatisSqlSessionFactoryBean sqlSessionFactory = <span class="keyword">new</span> MybatisSqlSessionFactoryBean();</span><br><span class="line">        sqlSessionFactory.setDataSource(multipleDataSource(db1(),db2(),db3()));</span><br><span class="line">        <span class="comment">//sqlSessionFactory.setMapperLocations(new PathMatchingResourcePatternResolver().getResources(&quot;classpath:/mapper/*/*Mapper.xml&quot;));</span></span><br><span class="line"></span><br><span class="line">        MybatisConfiguration configuration = <span class="keyword">new</span> MybatisConfiguration();</span><br><span class="line">        <span class="comment">//configuration.setDefaultScriptingLanguage(MybatisXMLLanguageDriver.class);</span></span><br><span class="line">        configuration.setJdbcTypeForNull(JdbcType.NULL);</span><br><span class="line">        configuration.setMapUnderscoreToCamelCase(<span class="keyword">true</span>);</span><br><span class="line">        configuration.setCacheEnabled(<span class="keyword">false</span>);</span><br><span class="line">        configuration.setLogImpl(StdOutImpl.class);</span><br><span class="line">        sqlSessionFactory.setConfiguration(configuration);</span><br><span class="line">        sqlSessionFactory.setMapperLocations(<span class="keyword">new</span> PathMatchingResourcePatternResolver().</span><br><span class="line">                getResources(<span class="string">&quot;classpath*:mapper/*.xml&quot;</span>));</span><br><span class="line">        sqlSessionFactory.setConfiguration(configuration);</span><br><span class="line">        sqlSessionFactory.setPlugins(<span class="keyword">new</span> Interceptor[]&#123;paginationInterceptor()&#125;);</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.getObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">DataSourceEnum</span> </span>&#123;</span><br><span class="line">    BUSSINESS(<span class="string">&quot;business&quot;</span>),DW(<span class="string">&quot;dw&quot;</span>),SEAL(<span class="string">&quot;seal&quot;</span>),H3(<span class="string">&quot;H3&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String value;</span><br><span class="line"></span><br><span class="line">    DataSourceEnum(String value)&#123;<span class="keyword">this</span>.value=value;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-使用方式"><a href="#3-使用方式" class="headerlink" title="3.使用方式"></a>3.使用方式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">batchUpdateBusinessInfo</span><span class="params">(ArrayList&lt;BusinessInfoEntity&gt; updateBusinessInfoEntities)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> businessInfoRepo.batchUpdateBusinessInfo(updateBusinessInfoEntities);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@DataSource(DataSourceEnum.DW)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;BusinessInfoRepoDTO&gt; <span class="title">queryBusinessInfo</span><span class="params">(BatchBusinessInfoReqDTO reqDTO)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> businessInfoRepo.queryBusinessInfo(reqDTO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> AOP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot常用注解</title>
      <link href="/2022/03/07/SpringBoot%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/"/>
      <url>/2022/03/07/SpringBoot%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h4 id="时间格式化注解-DateTimeFormat-和-JsonFormat"><a href="#时间格式化注解-DateTimeFormat-和-JsonFormat" class="headerlink" title="时间格式化注解 @DateTimeFormat 和 @JsonFormat"></a>时间格式化注解 @DateTimeFormat 和 @JsonFormat</h4><ul><li><p><strong>@DateTimeFormat</strong>：指定入参的时间格式，入参的格式不正确会报错。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateVo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@DateTimeFormat(pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>@JsonFormat</strong> : 对数据库中查询出的时间类型的数据进行格式化，jackson在序列化时间时是按照国际标准时间GMT进行格式化的，而在国内默认时区使用的是CST时区，两者相差8小时。该注解集成在spring-boot-start-web 下无需再引入依赖。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateVo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@DateTimeFormat(pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="meta">@JsonFormat(pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;, timezone=&quot;GMT+8&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot注解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hydee小技术</title>
      <link href="/2022/02/13/hydee%E5%B0%8F%E6%8A%80%E6%9C%AF/"/>
      <url>/2022/02/13/hydee%E5%B0%8F%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="1-多数据源切换"><a href="#1-多数据源切换" class="headerlink" title="1. 多数据源切换"></a>1. 多数据源切换</h3><h3 id="2-防止表单重复提交"><a href="#2-防止表单重复提交" class="headerlink" title="2. 防止表单重复提交"></a>2. 防止表单重复提交</h3><h3 id="3-误删数据库表或数据的恢复方法。"><a href="#3-误删数据库表或数据的恢复方法。" class="headerlink" title="3. 误删数据库表或数据的恢复方法。"></a>3. 误删数据库表或数据的恢复方法。</h3>]]></content>
      
      
      
        <tags>
            
            <tag> hydee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo的使用技巧</title>
      <link href="/2022/02/10/hexo%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/02/10/hexo%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="1-主题"><a href="#1-主题" class="headerlink" title="1. 主题"></a>1. 主题</h3><h4 id="1-1-设置或更换主题"><a href="#1-1-设置或更换主题" class="headerlink" title="1.1 设置或更换主题"></a>1.1 <strong>设置或更换主题</strong></h4><ol><li>下载合适Hexo主题压缩包，将其解压到博客根目录下的themes目录中。</li><li>修改 <strong>_config.yml</strong> 配置文件中theme属性的值为themes中合适的主题文件夹名。</li></ol><h4 id="1-2-主题生效或上传Git命令"><a href="#1-2-主题生效或上传Git命令" class="headerlink" title="1.2 主题生效或上传Git命令"></a>1.2 主题生效或上传Git命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- hexo clean  清除下 Hexo 的缓存</span><br><span class="line">-- hexo generate  博客重新生成, 简写 hexo g</span><br><span class="line">-- hexo s  本地启动。 http://localhost:4000 可查看(当4000端口被占用可 hexo s -port 选择合适的端口启动。)</span><br><span class="line">-- hexo d  部署到git</span><br></pre></td></tr></table></figure><h4 id="1-3-创建文件"><a href="#1-3-创建文件" class="headerlink" title="1.3 创建文件"></a>1.3 创建文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &lt;filename&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作BUG</title>
      <link href="/2022/02/10/%E5%B7%A5%E4%BD%9CBUG/"/>
      <url>/2022/02/10/%E5%B7%A5%E4%BD%9CBUG/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Spring-Boot利用K8S部署存在多个实例。"><a href="#1-Spring-Boot利用K8S部署存在多个实例。" class="headerlink" title="1. Spring Boot利用K8S部署存在多个实例。"></a>1. Spring Boot利用K8S部署存在多个实例。</h3><p><img src="%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_16444733455966-16444845527231.png" alt="工作BUG"></p><p><img src="image-20220210181214364.png" alt="工作BUG"></p><ul><li>误操作导致的，将本地的配置文件信息上传到了Git上覆盖了分支上的配置文件信息，导致服务启动无法自动替换。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> BUG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBaits的使用</title>
      <link href="/2022/01/14/MyBaits%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/01/14/MyBaits%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h3><h4 id="MyBatis的模糊查询"><a href="#MyBatis的模糊查询" class="headerlink" title="MyBatis的模糊查询"></a>MyBatis的模糊查询</h4><ul><li><p><strong>方式一</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`field_name` like concat(&#x27;%&#x27;, #&#123;value&#125;, &#x27;%&#x27;)</span><br></pre></td></tr></table></figure><p><strong>栗子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`group_name` <span class="keyword">like</span> concat(<span class="string">&#x27;%&#x27;</span>,#&#123;groupName&#125;, <span class="string">&#x27;%&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>方式二</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`field_name` <span class="keyword">like</span> concat(<span class="string">&#x27;%&#x27;</span>, $&#123;<span class="keyword">value</span>&#125;, <span class="string">&#x27;%&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>栗子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`group_name` <span class="keyword">like</span> concat(<span class="string">&#x27;%&#x27;</span>,$&#123;groupName&#125;, <span class="string">&#x27;%&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>总结</strong>：</p><ul><li>#{ }是预编译处理，MyBatis在处理#{ }时，它会将sql中的#{ }替换为？，然后调用PreparedStatement的set方法来赋值，传入字符串后，会在值两边加上单引号，使用占位符的方式提高效率，可以防止sql注入。</li><li>${}:表示拼接sql串，将接收到参数的内容不加任何修饰拼接在sql中，可能引发sql注入。</li></ul><h4 id="MyBatis（plus）分页功能"><a href="#MyBatis（plus）分页功能" class="headerlink" title="MyBatis（plus）分页功能"></a>MyBatis（plus）分页功能</h4><ul><li><p>配置类或配置文件中配置分页插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> PaginationIntercpetor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建分页对象，根据不同的构造方法创建合适的分页对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IPage&lt;T&gt; page = <span class="keyword">new</span> Page&lt;&gt;();</span><br></pre></td></tr></table></figure></li><li><p>将page对象作为参数传给待查询方法中，方法返回一个page对象和传入的page对象是同一个。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IPage&lt;T&gt; <span class="title">queryGroupProgramInfo</span><span class="params">(IPage&lt;T&gt; page,<span class="meta">@Param(&quot;reqDTO&quot;)</span>xxxDTO reqDTO)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>page对象中常用的方法</p><table><thead><tr><th>方法名称</th><th>功能</th></tr></thead><tbody><tr><td>page.getRecords()</td><td>获取分页的数据。</td></tr><tr><td>page.getTotal()</td><td>数据的总条数</td></tr><tr><td>page.getCurrent()</td><td>当前页码</td></tr><tr><td>page.getPages()</td><td>总页数</td></tr><tr><td>page.getSize()</td><td>每页的条数</td></tr></tbody></table></li></ul><h4 id="MyBatisoe配置信息"><a href="#MyBatisoe配置信息" class="headerlink" title="MyBatisoe配置信息"></a>MyBatisoe配置信息</h4><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">//配置映射文件路径</span></span><br><span class="line"><span class="meta">mybatis-plus.mapper-locations</span>=<span class="string">classpath*:mapper/*.xml</span></span><br><span class="line"><span class="attr">//打印SQL执行日志信息</span></span><br><span class="line"><span class="meta">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java集合之List</title>
      <link href="/2022/01/13/Java%E9%9B%86%E5%90%88%E4%B9%8BList/"/>
      <url>/2022/01/13/Java%E9%9B%86%E5%90%88%E4%B9%8BList/</url>
      
        <content type="html"><![CDATA[<h3 id="1、List集合"><a href="#1、List集合" class="headerlink" title="1、List集合"></a>1、List集合</h3><h4 id="1-1-List集合的排序"><a href="#1-1-List集合的排序" class="headerlink" title="1.1 List集合的排序"></a>1.1 List集合的排序</h4><ol><li><p>内部类方式—Comparator</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 升序排序</span></span><br><span class="line">Collections.sort(list, <span class="keyword">new</span> Comparator&lt;test&gt;() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(test o1, test o2)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> o1.getCmonth().compareTo(o2.getCmonth());</span><br><span class="line">                &#125;</span><br><span class="line"> <span class="comment">// 降序排序</span></span><br><span class="line">Collections.sort(list, <span class="keyword">new</span> Comparator&lt;test&gt;() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(test o1, test o2)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> o1.getCmonth().compareTo(o2.getCmonth());</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure></li><li><p>实现比较类—Comparable</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">Test</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line"> <span class="comment">// 升序排序</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Test o)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.age.compareTo(o.getAge());</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 降序排序</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Test o)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.age.compareTo(o.getAge());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//需要排序的集合排序 List&lt;Test&gt;</span></span><br><span class="line">Collections.sort(list);</span><br></pre></td></tr></table></figure></li><li><p>Stream流方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// stream流方式-降序排序(逆序排序)</span></span><br><span class="line">list = list.stream().sorted(Comparator.comparing(test::getAge)</span><br><span class="line">    .reversed())</span><br><span class="line">    .collect(Collectors.toList());</span><br><span class="line"><span class="comment">//stream流方式-升序排序</span></span><br><span class="line">list =list.stream().sorted(Comparator.comparing(test::getAge))</span><br><span class="line">                   .collect(Collectors.toList());</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> List </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker的使用</title>
      <link href="/2022/01/12/Docker%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/01/12/Docker%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h3><table><thead><tr><th>功能</th><th>命令</th><th></th></tr></thead><tbody><tr><td>启动Docker</td><td>systemctl start docker</td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td>查看全部容器</td><td>docker ps -a</td><td></td></tr><tr><td>查看运行中的容器</td><td>docker ps</td><td></td></tr><tr><td>启动停止的容器</td><td>docker start &lt;containerName(container)&gt;</td><td></td></tr><tr><td>停止容器</td><td>docker stop &lt;containerName(containerId)&gt;</td><td></td></tr><tr><td>删除容器</td><td>docker rm $ContainerName(或者$ContainerId)</td><td></td></tr></tbody></table><hr><h3 id="Docker部署MySQL8"><a href="#Docker部署MySQL8" class="headerlink" title="Docker部署MySQL8"></a>Docker部署MySQL8</h3><h4 id="启动运行MySQL镜像"><a href="#启动运行MySQL镜像" class="headerlink" title="启动运行MySQL镜像"></a>启动运行MySQL镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3306:3306 --name MySQL8.0 -e MYSQL_ROOT_PASSWORD=041225 -d mysql:8.0</span><br></pre></td></tr></table></figure><h4 id="进入MySQL"><a href="#进入MySQL" class="headerlink" title="进入MySQL"></a>进入MySQL</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it &lt;CONTAINER ID&gt; bash</span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><ul><li><p><strong>栗子</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@izbp116fn1k2l4hhdnx2iyz ~]# docker exec -it 88c99b8037f9 bash</span><br><span class="line">root@88c99b8037f9:/# mysql -u root -p</span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure></li><li><p><strong>处理SQLYog无法连接MySQL8</strong></p><ol><li><p>进入MySQL容器</p></li><li><p>执行命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;041225&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h4 id="重启MySQL镜像"><a href="#重启MySQL镜像" class="headerlink" title="重启MySQL镜像"></a>重启MySQL镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库基础</title>
      <link href="/2022/01/12/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8SQL%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/01/12/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8SQL%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="1-MySQL基础"><a href="#1-MySQL基础" class="headerlink" title="1. MySQL基础"></a>1. MySQL基础</h1><h2 id="1-0MySQL的数据类型"><a href="#1-0MySQL的数据类型" class="headerlink" title="1.0MySQL的数据类型"></a>1.0MySQL的数据类型</h2><p>unsigned 无符号</p><ul><li><p>数值类型</p><table><thead><tr><th>类型</th><th>大小</th><th>范围（有符号）</th><th>范围（无符号）</th><th>用途</th></tr></thead><tbody><tr><td>tinyint</td><td>1byte</td><td>(-128, 127)</td><td>(0, 255)</td><td>小整数值</td></tr><tr><td>smallint</td><td>2byte</td><td>(-32768, 32767)</td><td>(0, 65535)</td><td>大整数值</td></tr><tr><td>mediumint</td><td>3btye</td><td>(-8388608, 8388607)</td><td>(0, 16777215)</td><td>大整数值</td></tr><tr><td>int</td><td>4byte</td><td>(-2147483648, 2147483647)</td><td>(0, 4294967295)</td><td>大整数值</td></tr><tr><td>bigint</td><td>8byte</td><td></td><td></td><td>极大整数值</td></tr><tr><td>float</td><td>4byte</td><td></td><td></td><td></td></tr><tr><td>double</td><td>8byte</td><td></td><td></td><td></td></tr><tr><td>decimal</td><td></td><td></td><td>依赖M和D的值</td><td>小数值 如：decimal(5,2) 123.45</td></tr></tbody></table></li><li><p>字符串类型</p></li><li><p>日期时间类型</p><table><thead><tr><th>类型</th><th>大小(byte)</th><th>范围</th><th>格式</th><th>用途</th></tr></thead><tbody><tr><td>date</td><td>3</td><td>1000-01-01~9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>time</td><td>3</td><td>-838:59:59~838:59:59</td><td>HH:MM:SS</td><td>时间值</td></tr><tr><td>year</td><td>1</td><td>1901~2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>datetime</td><td>8</td><td>1000-01-01 00:00:00 ~9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td></td></tr><tr><td>timestamp</td><td>4</td><td>1970-01-01 00:00:01 UTC ~2038-01-19 03:14:07 UTC</td><td>YYYY-MM-DD HH:MM:SS</td><td></td></tr></tbody></table><p><strong>注意：</strong>与时区关系. datetime是存储服务器当前的时区. 而timestamp类型,是将服务器当前时间转换为UTC(世界时间)来存储.即datetime与时区无关,存什么,返回什么. 而timestamp存储的时间,返回的时间会随着数据库的时区不同而发生改变.</p></li></ul><h2 id="1-1-MySQL数据库基本操作-DDL"><a href="#1-1-MySQL数据库基本操作-DDL" class="headerlink" title="1.1 MySQL数据库基本操作-DDL"></a>1.1 MySQL数据库基本操作-DDL</h2><ul><li><p>DDL(Data Definition Langauage),数据定义语言，该部分语言包含一些部分：</p><ol><li>对数据库的常用操作。</li><li>对表结构的常用操作。</li></ol></li><li><p>对数据库的常用操作</p><table><thead><tr><th>功能</th><th>SQL</th></tr></thead><tbody><tr><td>查看所有的数据库</td><td>show databases;</td></tr><tr><td>创建数据库</td><td>create database [if not exists] <databasename> [charset=utf8]</td></tr><tr><td>切换数据库</td><td>user <databasename></td></tr><tr><td>删除数据库</td><td>drop database [if exists] <databasename></td></tr><tr><td>修改数据库编码</td><td>alter database <databasename> character set utf8</td></tr></tbody></table></li><li><p>对表结构的常用操作</p><table><thead><tr><th>功能</th><th>SQL</th></tr></thead><tbody><tr><td>查看当前数据库中的所有表名称</td><td>show tables;</td></tr><tr><td>查看指定某个表的创建语句</td><td>show create table <tablename>;</td></tr><tr><td>查看表结构</td><td>desc <tablename>;</td></tr><tr><td>删除表</td><td>drop table <tablename>;</td></tr><tr><td></td><td></td></tr></tbody></table><ol><li><p>创建表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table [if not exists] &lt;tablename&gt;(</span><br><span class="line">字段1 数据类型[(长度)] [约束条件] [定义字段字符集] [comment &#x27;字段说明&#x27;],</span><br><span class="line">字段2 数据类型[(长度)] [约束条件] [定义字段字符集] [comment &#x27;字段说明&#x27;],</span><br><span class="line">字段3 数据类型[(长度)] [约束条件] [定义字段字符集] [comment &#x27;字段说明&#x27;],</span><br><span class="line">......</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#x27;表名&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `order_info` (</span><br><span class="line">  `id` <span class="type">bigint</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">  `user_id` <span class="type">bigint</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `out_trade_no` <span class="type">varchar</span>(<span class="number">300</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单交易号&#x27;</span>,</span><br><span class="line">  `hoscode` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;医院编号&#x27;</span>,</span><br><span class="line">  `hospital_name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;医院名称&#x27;</span>,</span><br><span class="line">  `depcode` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;科室编号&#x27;</span>,</span><br><span class="line">  `depname` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;科室名称&#x27;</span>,</span><br><span class="line">  `title` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;医生职称&#x27;</span>,</span><br><span class="line">  `hos_schedule_id` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;排班编号（医院自己的排班主键）&#x27;</span>,</span><br><span class="line">  `reserve_date` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;安排日期&#x27;</span>,</span><br><span class="line">  `reserve_time` tinyint <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;安排时间（0：上午 1：下午）&#x27;</span>,</span><br><span class="line">  `patient_id` <span class="type">bigint</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;就诊人id&#x27;</span>,</span><br><span class="line">  `patient_name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;就诊人名称&#x27;</span>,</span><br><span class="line">  `patient_phone` <span class="type">varchar</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;就诊人手机&#x27;</span>,</span><br><span class="line">  `hos_record_id` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;预约记录唯一标识（医院预约记录主键）&#x27;</span>,</span><br><span class="line">  `number` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;预约号序&#x27;</span>,</span><br><span class="line">  `fetch_time` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;建议取号时间&#x27;</span>,</span><br><span class="line">  `fetch_address` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;取号地点&#x27;</span>,</span><br><span class="line">  `amount` <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">0</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;医事服务费&#x27;</span>,</span><br><span class="line">  `quit_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;退号时间&#x27;</span>,</span><br><span class="line">  `order_status` tinyint <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单状态&#x27;</span>,</span><br><span class="line">  `create_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> UPDATE <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `is_delete` tinyint <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_out_trade_no` (`out_trade_no`),</span><br><span class="line">  KEY `idx_user_id` (`user_id`),</span><br><span class="line">  KEY `idx_hoscode` (`hoscode`),</span><br><span class="line">  KEY `idx_hos_schedule_id` (`hos_schedule_id`),</span><br><span class="line">  KEY `idx_hos_record_id` (`hos_record_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">13</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb3 COMMENT<span class="operator">=</span><span class="string">&#x27;订单表&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>修改表结构</p><ul><li><p>添加表字段,添加到指定字段的后面。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span><span class="operator">&lt;</span>tablename<span class="operator">&gt;</span> <span class="keyword">add</span> <span class="operator">&lt;</span>filedname<span class="operator">&gt;</span> 类型(长度) [约束] [after <span class="operator">&lt;</span>已存在的字段<span class="operator">&gt;</span>];</span><br></pre></td></tr></table></figure></li><li><p>修改表字段名称</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>tablename<span class="operator">&gt;</span> rename <span class="keyword">column</span> <span class="operator">&lt;</span>filedname<span class="operator">&gt;</span> <span class="keyword">to</span> <span class="operator">&lt;</span>newfiledname<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改表字段属性</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>tablename<span class="operator">&gt;</span> modify <span class="operator">&lt;</span>filedname<span class="operator">&gt;</span> 类型(长度) [其他属性]</span><br></pre></td></tr></table></figure></li><li><p>删除表字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>tablename<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">column</span> <span class="operator">&lt;</span>filedname<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加表字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> order_info <span class="keyword">add</span> `is_delete` tinyint <span class="keyword">default</span> <span class="number">1</span> after update_time;</span><br><span class="line"><span class="comment">-- 修改表字段名称</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> order_info rename <span class="keyword">column</span> `hosname` <span class="keyword">to</span>  `hospital_name`;</span><br><span class="line"><span class="comment">-- 修改表字段属性</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> order_info modify hospital_name <span class="type">varchar</span>(<span class="number">100</span>) <span class="type">character</span> <span class="keyword">set</span> utf8mb4 <span class="keyword">collate</span> utf8mb4_general_ci <span class="keyword">default</span> <span class="keyword">null</span> comment <span class="string">&#x27;医院名称&#x27;</span>;</span><br><span class="line"><span class="comment">-- 删除表字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> order_info <span class="keyword">drop</span> <span class="keyword">column</span> is_deleted;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h3 id="一、基本SQL"><a href="#一、基本SQL" class="headerlink" title="一、基本SQL"></a>一、基本SQL</h3><h5 id="1-查看MySQL数据库版本"><a href="#1-查看MySQL数据库版本" class="headerlink" title="1. 查看MySQL数据库版本"></a>1. 查看MySQL数据库版本</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> VERSION();</span><br></pre></td></tr></table></figure><hr><h5 id="2-常见关键字"><a href="#2-常见关键字" class="headerlink" title="2. 常见关键字"></a>2. 常见关键字</h5><ul><li><strong>CURRENT_TIMESTAMP</strong><ul><li><strong>DEFAULT CURRENT_TIMESTAMP</strong>  表示当插入数据的时候，该字段默认值为当前时间</li><li><strong>ON UPDATE CURRENT_TIMESTAMP</strong> 表示每次更新这条数据的时候，该字段都会更新成当前时间</li></ul></li></ul><p><strong>栗子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test` (</span><br><span class="line">    `text` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;内容&#x27;</span>,</span><br><span class="line">    `create_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `update_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> UPDATE <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><h5 id="3-常用函数"><a href="#3-常用函数" class="headerlink" title="3. 常用函数"></a>3. 常用函数</h5><ul><li><p><strong>日期函数</strong></p><ul><li><strong>YEAR(date)</strong>  获取date类型数据的年</li><li><strong>MONTH(date)</strong> 获取date类型数据的月</li><li><strong>DAY(date)</strong> 获取date类型数据的日</li></ul></li><li><p><strong>CONCAT()</strong>  <strong>字符串拼接函数</strong></p><ul><li><p><strong>concat(col_1, col_2, …)</strong></p><ul><li><p><strong>栗子1</strong>：concat函数中无null</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> region_id, region_name, CONCAT(region_id, <span class="string">&#x27;-&#x27;</span>, region_name) <span class="keyword">AS</span> a <span class="keyword">FROM</span> regions;</span><br></pre></td></tr></table></figure><p>结果集：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">region_id  region_name             a                         </span><br><span class="line">---------  ----------------------  --------------------------</span><br><span class="line">        1  Europe                  1-Europe                  </span><br><span class="line">        2  Americas                2-Americas                </span><br><span class="line">        3  Asia                    3-Asia                    </span><br><span class="line">        4  Middle East and Africa  4-Middle East and Africa  </span><br></pre></td></tr></table></figure></li><li><p><strong>栗子1</strong>：concat函数中有null</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> region_id, region_name, CONCAT(region_id, <span class="keyword">null</span>, region_name) <span class="keyword">AS</span> a <span class="keyword">FROM</span> regions;</span><br></pre></td></tr></table></figure><p>结果集</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">region_id  region_name             a       </span><br><span class="line">---------  ----------------------  --------</span><br><span class="line">        1  Europe                  (NULL)  </span><br><span class="line">        2  Americas                (NULL)  </span><br><span class="line">        3  Asia                    (NULL)  </span><br><span class="line">        4  Middle East and Africa  (NULL)  </span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><hr><h5 id="3-SQL-创建-修改唯一索引"><a href="#3-SQL-创建-修改唯一索引" class="headerlink" title="3. SQL 创建/修改唯一索引"></a>3. SQL 创建/修改唯一索引</h5><ul><li><p><strong>创建</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UNIQUE</span> [INDEX <span class="operator">|</span> KEY] [<span class="operator">&lt;</span>索引名<span class="operator">&gt;</span>] [<span class="operator">&lt;</span>索引类型<span class="operator">&gt;</span>] (<span class="operator">&lt;</span>列名<span class="operator">&gt;</span>,…)</span><br></pre></td></tr></table></figure><p><strong>栗子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UNIQUE</span> KEY `unique_index`(`group_id`, `company_id`, `business_id`)</span><br></pre></td></tr></table></figure><p>注意事项：在创建唯一索引时，一定要保证索引的唯一性。如上面栗子的索引字段，保存数据时是重复的，此时索引创建会报错。</p></li><li><p><strong>修改</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `TableName` <span class="keyword">DROP</span> INDEX `INDEX_NAME`;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `TableName` <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> INDEX_NAME(`<span class="keyword">COLUMN</span>`);</span><br></pre></td></tr></table></figure><p><strong>栗子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> follow_heart_store_sales_target_collect <span class="keyword">DROP</span> INDEX `unique_index`</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> follow_heart_store_sales_target_collect <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> KEY `unique_index`(`cdate`,`group_id`, `company_id`, `business_id`)</span><br></pre></td></tr></table></figure><p>注意：修改索引实际上是删除旧索引后，重新创建合适的索引。</p></li></ul><hr><h3 id="二、CTE-公共表表达式"><a href="#二、CTE-公共表表达式" class="headerlink" title="二、CTE(公共表表达式)"></a>二、CTE(公共表表达式)</h3><h5 id="1-什么是公用表表达式或CTE？"><a href="#1-什么是公用表表达式或CTE？" class="headerlink" title="1. 什么是公用表表达式或CTE？"></a>1. 什么是公用表表达式或CTE？</h5><ul><li>公用表表达式是一个命名的临时结果集(临时表)，仅在单个SQL语句(例如<a href="http://www.yiibai.com/mysql/select-statement-query-data.html">SELECT</a>，<a href="http://www.yiibai.com/mysql/insert-statement.html">INSERT</a>，<a href="http://www.yiibai.com/mysql/update-data.html">UPDATE</a>或<a href="http://www.yiibai.com/mysql/delete-statement.html">DELETE</a>)的执行范围内存在。</li><li><em>CTE</em>不作为对象存储，仅在查询执行期间持续。</li><li><em>CTE</em>可以是自引用(<a href="http://www.yiibai.com/mysql/recursive-cte.html">递归CTE</a>)，也可以在同一查询中多次引用。</li><li>与派生表相比，<em>CTE</em>提供了更好的可读性和性能。</li></ul><h5 id="2-CTE语法"><a href="#2-CTE语法" class="headerlink" title="2. CTE语法"></a>2. CTE语法</h5><ul><li><strong>CTE主要构成：</strong> <em>临时表名</em>，<em>展示临时表列</em> (不写默认展示所有)，<em>定义CTE的查询</em> (单个SQL语句)。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> cte_name1[(column_list)] <span class="keyword">AS</span> (</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>单个<span class="keyword">SQL</span>语句(一般都是查询操作)</span><br><span class="line">),</span><br><span class="line">cte_name2 <span class="keyword">AS</span>[(column_list)] (</span><br><span class="line">    <span class="operator">/</span><span class="operator">/</span>单个<span class="keyword">SQL</span>语句</span><br><span class="line">),</span><br><span class="line">...</span><br><span class="line"><span class="keyword">SELECT</span> column_name1,[column_name2,...]</span><br><span class="line"><span class="keyword">FROM</span> cte_name1,cte_name2;</span><br></pre></td></tr></table></figure><hr><h3 id="三、MySQL8-0-窗口函数"><a href="#三、MySQL8-0-窗口函数" class="headerlink" title="三、MySQL8.0 窗口函数"></a>三、MySQL8.0 窗口函数</h3><h4 id="3-1-什么是窗口函数？"><a href="#3-1-什么是窗口函数？" class="headerlink" title="3.1 什么是窗口函数？"></a>3.1 什么是窗口函数？</h4><ul><li>窗口函数在MySQL8+才支持的函数，又称分析函数。</li><li>窗口函数 = 窗口 + 函数。</li><li>窗口的大小可以是固定的，也可以是可变的，还可以是滑动的。</li><li>窗口函数可以在查询出来的结果集(该结果集肯定满足某些条件)上，设置一个窗口，为窗口内的每条数据都执行一次窗口函数。</li><li>一般窗口函数对应的列，会紧跟结果集的后面。</li></ul><h4 id="3-2-窗口函数语法"><a href="#3-2-窗口函数语法" class="headerlink" title="3.2 窗口函数语法"></a>3.2 窗口函数语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windows_function([expression]) <span class="keyword">over</span>([<span class="keyword">partition</span> <span class="keyword">by</span>  <span class="operator">&lt;</span>分区的列<span class="operator">&gt;</span>] [<span class="keyword">order</span> <span class="keyword">by</span> <span class="operator">&lt;</span>排序的列<span class="operator">&gt;</span>] [<span class="keyword">rows</span> <span class="keyword">between</span> <span class="operator">&lt;</span>范围<span class="operator">&gt;</span>])</span><br></pre></td></tr></table></figure><ul><li><p>over中参数可省略。如果为空，则窗口的大小是满足where条件的所有数据大小。</p></li><li><p><strong>rows betweet的实例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rows</span> <span class="keyword">between</span> <span class="number">2</span> preceding <span class="keyword">and</span> <span class="keyword">current</span> <span class="type">row</span> <span class="comment">-- 取当前行和前面两行。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rows</span> <span class="keyword">between</span> unbounded preceding <span class="keyword">and</span> <span class="keyword">current</span> <span class="type">row</span> <span class="comment">-- 取当前行和前面所有行。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rows</span> <span class="keyword">between</span> <span class="keyword">current</span> <span class="type">row</span> <span class="keyword">and</span> unbounded following <span class="comment">-- 取当前行和后面所有行。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rows</span> <span class="keyword">between</span> <span class="number">3</span> preceding <span class="keyword">and</span> <span class="keyword">current</span> <span class="type">row</span> <span class="comment">-- 取当前行和前三行。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rows</span> <span class="keyword">between</span> <span class="number">3</span> precding <span class="keyword">and</span> <span class="number">1</span> following <span class="comment">-- 取当前行和前三行和后一行，共5行。</span></span><br></pre></td></tr></table></figure><ul><li>当省略 <strong>rows bteween</strong> ,则默认为 <code>rows between unbounded preceding and current row</code>。</li><li>当省略 <strong>order by 和 rows between</strong> , 则默认为 <code>rows between unbounded preceding and unbounded following</code></li></ul></li></ul><h4 id="3-3-窗口函数分类"><a href="#3-3-窗口函数分类" class="headerlink" title="3.3 窗口函数分类"></a>3.3 窗口函数分类</h4><ul><li>排名窗口函数<ul><li><strong>rank</strong></li><li><strong>dense_rank</strong></li><li><strong>percent_rank</strong></li><li><strong>row_number</strong>4</li><li><strong>ntile</strong></li><li><strong>cume_dist</strong></li></ul></li><li>取值窗口函数<ul><li><strong>lag</strong></li><li><strong>lead</strong></li><li><strong>first_value</strong></li><li><strong>last_value</strong></li><li><strong>nth_value</strong></li></ul></li><li>聚合窗口函数<ul><li><strong>ave</strong></li><li><strong>sum</strong></li><li><strong>count</strong></li><li><strong>max</strong></li><li><strong>min</strong></li></ul></li></ul><p><img src="D:\blog\source_posts\MySQL数据库常用SQL操作\image-20220119215508992.png" alt="image-20220119215508992"></p><p><img src="image-20220119215508992.png" alt="image-20220119215508992"></p><p><a href="https://tonydong.blog.csdn.net/article/details/106306454">SQL 窗口函数速查表_Tony.Dong的专栏-CSDN博客</a></p><h4 id="3-4-窗口函数应用"><a href="#3-4-窗口函数应用" class="headerlink" title="3.4 窗口函数应用"></a>3.4 窗口函数应用</h4><hr><h3 id="附录1：-windows命令行操作数据库"><a href="#附录1：-windows命令行操作数据库" class="headerlink" title="附录1： windows命令行操作数据库"></a>附录1： windows命令行操作数据库</h3><h4 id="1-命令行启动停止MySQL"><a href="#1-命令行启动停止MySQL" class="headerlink" title="1. 命令行启动停止MySQL"></a>1. 命令行启动停止MySQL</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net start/stop &lt;服务名称&gt;</span><br><span class="line">启动: net start mysql80</span><br><span class="line">停止: net stop mysql80</span><br></pre></td></tr></table></figure><h4 id="2-进入MySQL"><a href="#2-进入MySQL" class="headerlink" title="2.进入MySQL"></a>2.进入MySQL</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p -h localhost [-P 3308]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多线程</title>
      <link href="/2022/01/01/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/2022/01/01/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="1-多线程简介"><a href="#1-多线程简介" class="headerlink" title="1. 多线程简介"></a>1. 多线程简介</h2><p><img src="%E5%A4%9A%E7%BA%BF%E7%A8%8B-16417400928971.png" alt="多线程"></p>]]></content>
      
      
      <categories>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java常用API</title>
      <link href="/2022/01/01/Java%E5%B8%B8%E7%94%A8API/"/>
      <url>/2022/01/01/Java%E5%B8%B8%E7%94%A8API/</url>
      
        <content type="html"><![CDATA[<h1 id="1-String常用方法"><a href="#1-String常用方法" class="headerlink" title="1. String常用方法"></a>1. String常用方法</h1><h3 id="1-1-截取功能"><a href="#1-1-截取功能" class="headerlink" title="1.1 截取功能"></a>1.1 截取功能</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
