<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SpringBoot常用注解</title>
      <link href="/2022/03/07/SpringBoot%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/"/>
      <url>/2022/03/07/SpringBoot%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h4 id="时间格式化注解-DateTimeFormat-和-JsonFormat"><a href="#时间格式化注解-DateTimeFormat-和-JsonFormat" class="headerlink" title="时间格式化注解 @DateTimeFormat 和 @JsonFormat"></a>时间格式化注解 @DateTimeFormat 和 @JsonFormat</h4><ul><li><p><strong>@DateTimeFormat</strong>：指定入参的时间格式，入参的格式不正确会报错。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateVo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@DateTimeFormat(pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>@JsonFormat</strong> : 对数据库中查询出的时间类型的数据进行格式化，jackson在序列化时间时是按照国际标准时间GMT进行格式化的，而在国内默认时区使用的是CST时区，两者相差8小时。该注解集成在spring-boot-start-web 下无需再引入依赖。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateVo</span> </span>&#123;</span><br><span class="line">    <span class="meta">@DateTimeFormat(pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="meta">@JsonFormat(pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;, timezone=&quot;GMT+8&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot注解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hydee小技术</title>
      <link href="/2022/02/13/hydee%E5%B0%8F%E6%8A%80%E6%9C%AF/"/>
      <url>/2022/02/13/hydee%E5%B0%8F%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="1-多数据源切换"><a href="#1-多数据源切换" class="headerlink" title="1. 多数据源切换"></a>1. 多数据源切换</h3><h3 id="2-防止表单重复提交"><a href="#2-防止表单重复提交" class="headerlink" title="2. 防止表单重复提交"></a>2. 防止表单重复提交</h3><h3 id="3-误删数据库表或数据的恢复方法。"><a href="#3-误删数据库表或数据的恢复方法。" class="headerlink" title="3. 误删数据库表或数据的恢复方法。"></a>3. 误删数据库表或数据的恢复方法。</h3>]]></content>
      
      
      
        <tags>
            
            <tag> hydee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo的使用技巧</title>
      <link href="/2022/02/10/hexo%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/02/10/hexo%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="1-主题"><a href="#1-主题" class="headerlink" title="1. 主题"></a>1. 主题</h3><h4 id="1-1-设置或更换主题"><a href="#1-1-设置或更换主题" class="headerlink" title="1.1 设置或更换主题"></a>1.1 <strong>设置或更换主题</strong></h4><ol><li>下载合适Hexo主题压缩包，将其解压到博客根目录下的themes目录中。</li><li>修改 <strong>_config.yml</strong> 配置文件中theme属性的值为themes中合适的主题文件夹名。</li></ol><h4 id="1-2-主题生效或上传Git命令"><a href="#1-2-主题生效或上传Git命令" class="headerlink" title="1.2 主题生效或上传Git命令"></a>1.2 主题生效或上传Git命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- hexo clean  清除下 Hexo 的缓存</span><br><span class="line">-- hexo generate  博客重新生成, 简写 hexo g</span><br><span class="line">-- hexo s  本地启动。 http://localhost:4000 可查看(当4000端口被占用可 hexo s -port 选择合适的端口启动。)</span><br><span class="line">-- hexo d  部署到git</span><br></pre></td></tr></table></figure><h4 id="1-3-创建文件"><a href="#1-3-创建文件" class="headerlink" title="1.3 创建文件"></a>1.3 创建文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &lt;filename&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作BUG</title>
      <link href="/2022/02/10/%E5%B7%A5%E4%BD%9CBUG/"/>
      <url>/2022/02/10/%E5%B7%A5%E4%BD%9CBUG/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Spring-Boot利用K8S部署存在多个实例。"><a href="#1-Spring-Boot利用K8S部署存在多个实例。" class="headerlink" title="1. Spring Boot利用K8S部署存在多个实例。"></a>1. Spring Boot利用K8S部署存在多个实例。</h3><p><img src="%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_16444733455966-16444845527231.png" alt="工作BUG"></p><p><img src="image-20220210181214364.png" alt="工作BUG"></p><ul><li>误操作导致的，将本地的配置文件信息上传到了Git上覆盖了分支上的配置文件信息，导致服务启动无法自动替换。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> BUG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBaits的使用</title>
      <link href="/2022/01/14/MyBaits%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/01/14/MyBaits%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h3><h4 id="MyBatis的模糊查询"><a href="#MyBatis的模糊查询" class="headerlink" title="MyBatis的模糊查询"></a>MyBatis的模糊查询</h4><ul><li><p><strong>方式一</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`field_name` like concat(&#x27;%&#x27;, #&#123;value&#125;, &#x27;%&#x27;)</span><br></pre></td></tr></table></figure><p><strong>栗子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`group_name` <span class="keyword">like</span> concat(<span class="string">&#x27;%&#x27;</span>,#&#123;groupName&#125;, <span class="string">&#x27;%&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>方式二</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`field_name` <span class="keyword">like</span> concat(<span class="string">&#x27;%&#x27;</span>, $&#123;<span class="keyword">value</span>&#125;, <span class="string">&#x27;%&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>栗子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`group_name` <span class="keyword">like</span> concat(<span class="string">&#x27;%&#x27;</span>,$&#123;groupName&#125;, <span class="string">&#x27;%&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>总结</strong>：</p><ul><li>#{ }是预编译处理，MyBatis在处理#{ }时，它会将sql中的#{ }替换为？，然后调用PreparedStatement的set方法来赋值，传入字符串后，会在值两边加上单引号，使用占位符的方式提高效率，可以防止sql注入。</li><li>${}:表示拼接sql串，将接收到参数的内容不加任何修饰拼接在sql中，可能引发sql注入。</li></ul><h4 id="MyBatis分页功能"><a href="#MyBatis分页功能" class="headerlink" title="MyBatis分页功能"></a>MyBatis分页功能</h4><ul><li><p>创建分页对象，根据不同的构造方法创建合适的分页对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IPage&lt;T&gt; page = <span class="keyword">new</span> Page&lt;&gt;();</span><br></pre></td></tr></table></figure></li><li><p>将page对象作为参数传给待查询方法中，方法返回一个page对象和传入的page对象是同一个。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IPage&lt;T&gt; <span class="title">queryGroupProgramInfo</span><span class="params">(IPage&lt;T&gt; page,<span class="meta">@Param(&quot;reqDTO&quot;)</span>xxxDTO reqDTO)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>page对象中常用的方法</p><table><thead><tr><th>方法名称</th><th>功能</th></tr></thead><tbody><tr><td>page.getRecords()</td><td>获取分页的数据。</td></tr><tr><td>page.getTotal()</td><td>数据的总条数</td></tr><tr><td>page.getCurrent()</td><td>当前页码</td></tr><tr><td>page.getPages()</td><td>总页数</td></tr><tr><td>page.getSize()</td><td>每页的条数</td></tr></tbody></table></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java集合之List</title>
      <link href="/2022/01/13/Java%E9%9B%86%E5%90%88%E4%B9%8BList/"/>
      <url>/2022/01/13/Java%E9%9B%86%E5%90%88%E4%B9%8BList/</url>
      
        <content type="html"><![CDATA[<h3 id="1、List集合"><a href="#1、List集合" class="headerlink" title="1、List集合"></a>1、List集合</h3><h4 id="1-1-List集合的排序"><a href="#1-1-List集合的排序" class="headerlink" title="1.1 List集合的排序"></a>1.1 List集合的排序</h4><ol><li><p>内部类方式—Comparator</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 升序排序</span></span><br><span class="line">Collections.sort(list, <span class="keyword">new</span> Comparator&lt;test&gt;() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(test o1, test o2)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> o1.getCmonth().compareTo(o2.getCmonth());</span><br><span class="line">                &#125;</span><br><span class="line"> <span class="comment">// 降序排序</span></span><br><span class="line">Collections.sort(list, <span class="keyword">new</span> Comparator&lt;test&gt;() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(test o1, test o2)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> o1.getCmonth().compareTo(o2.getCmonth());</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure></li><li><p>实现比较类—Comparable</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">Test</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Integer age;</span><br><span class="line">    </span><br><span class="line"> <span class="comment">// 升序排序</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Test o)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.age.compareTo(o.getAge());</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 降序排序</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Test o)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.age.compareTo(o.getAge());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//需要排序的集合排序 List&lt;Test&gt;</span></span><br><span class="line">Collections.sort(list);</span><br></pre></td></tr></table></figure></li><li><p>Stream流方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// stream流方式-降序排序(逆序排序)</span></span><br><span class="line">list = list.stream().sorted(Comparator.comparing(test::getAge)</span><br><span class="line">    .reversed())</span><br><span class="line">    .collect(Collectors.toList());</span><br><span class="line"><span class="comment">//stream流方式-升序排序</span></span><br><span class="line">list =list.stream().sorted(Comparator.comparing(test::getAge))</span><br><span class="line">                   .collect(Collectors.toList());</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> List </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker的使用</title>
      <link href="/2022/01/12/Docker%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/01/12/Docker%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h3><table><thead><tr><th>功能</th><th>命令</th><th></th></tr></thead><tbody><tr><td>启动Docker</td><td>systemctl start docker</td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td>查看全部容器</td><td>docker ps -a</td><td></td></tr><tr><td>查看运行中的容器</td><td>docker ps</td><td></td></tr><tr><td>启动停止的容器</td><td>docker start &lt;containerName(container)&gt;</td><td></td></tr><tr><td>停止容器</td><td>docker stop &lt;containerName(containerId)&gt;</td><td></td></tr><tr><td>删除容器</td><td>docker rm $ContainerName(或者$ContainerId)</td><td></td></tr></tbody></table><hr><h3 id="Docker部署MySQL8"><a href="#Docker部署MySQL8" class="headerlink" title="Docker部署MySQL8"></a>Docker部署MySQL8</h3><h4 id="启动运行MySQL镜像"><a href="#启动运行MySQL镜像" class="headerlink" title="启动运行MySQL镜像"></a>启动运行MySQL镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3306:3306 --name MySQL8.0 -e MYSQL_ROOT_PASSWORD=041225 -d mysql:8.0</span><br></pre></td></tr></table></figure><h4 id="进入MySQL"><a href="#进入MySQL" class="headerlink" title="进入MySQL"></a>进入MySQL</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it &lt;CONTAINER ID&gt; bash</span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><ul><li><p><strong>栗子</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@izbp116fn1k2l4hhdnx2iyz ~]# docker exec -it 88c99b8037f9 bash</span><br><span class="line">root@88c99b8037f9:/# mysql -u root -p</span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure></li><li><p><strong>处理SQLYog无法连接MySQL8</strong></p><ol><li><p>进入MySQL容器</p></li><li><p>执行命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;041225&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h4 id="重启MySQL镜像"><a href="#重启MySQL镜像" class="headerlink" title="重启MySQL镜像"></a>重启MySQL镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库常用SQL操作</title>
      <link href="/2022/01/12/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8SQL%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/01/12/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8SQL%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="一、基本SQL"><a href="#一、基本SQL" class="headerlink" title="一、基本SQL"></a>一、基本SQL</h3><h5 id="1-查看MySQL数据库版本"><a href="#1-查看MySQL数据库版本" class="headerlink" title="1. 查看MySQL数据库版本"></a>1. 查看MySQL数据库版本</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> VERSION();</span><br></pre></td></tr></table></figure><hr><h5 id="2-常见关键字"><a href="#2-常见关键字" class="headerlink" title="2. 常见关键字"></a>2. 常见关键字</h5><ul><li><strong>CURRENT_TIMESTAMP</strong><ul><li><strong>DEFAULT CURRENT_TIMESTAMP</strong>  表示当插入数据的时候，该字段默认值为当前时间</li><li><strong>ON UPDATE CURRENT_TIMESTAMP</strong> 表示每次更新这条数据的时候，该字段都会更新成当前时间</li></ul></li></ul><p><strong>栗子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test` (</span><br><span class="line">    `text` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;内容&#x27;</span>,</span><br><span class="line">    `create_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `update_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> UPDATE <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><h5 id="3-常用函数"><a href="#3-常用函数" class="headerlink" title="3. 常用函数"></a>3. 常用函数</h5><ul><li><p><strong>日期函数</strong></p><ul><li><strong>YEAR(date)</strong>  获取date类型数据的年</li><li><strong>MONTH(date)</strong> 获取date类型数据的月</li><li><strong>DAY(date)</strong> 获取date类型数据的日</li></ul></li><li><p><strong>CONCAT()</strong>  <strong>字符串拼接函数</strong></p><ul><li><p><strong>concat(col_1, col_2, …)</strong></p><ul><li><p><strong>栗子1</strong>：concat函数中无null</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> region_id, region_name, CONCAT(region_id, <span class="string">&#x27;-&#x27;</span>, region_name) <span class="keyword">AS</span> a <span class="keyword">FROM</span> regions;</span><br></pre></td></tr></table></figure><p>结果集：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">region_id  region_name             a                         </span><br><span class="line">---------  ----------------------  --------------------------</span><br><span class="line">        1  Europe                  1-Europe                  </span><br><span class="line">        2  Americas                2-Americas                </span><br><span class="line">        3  Asia                    3-Asia                    </span><br><span class="line">        4  Middle East and Africa  4-Middle East and Africa  </span><br></pre></td></tr></table></figure></li><li><p><strong>栗子1</strong>：concat函数中有null</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> region_id, region_name, CONCAT(region_id, <span class="keyword">null</span>, region_name) <span class="keyword">AS</span> a <span class="keyword">FROM</span> regions;</span><br></pre></td></tr></table></figure><p>结果集</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">region_id  region_name             a       </span><br><span class="line">---------  ----------------------  --------</span><br><span class="line">        1  Europe                  (NULL)  </span><br><span class="line">        2  Americas                (NULL)  </span><br><span class="line">        3  Asia                    (NULL)  </span><br><span class="line">        4  Middle East and Africa  (NULL)  </span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><hr><h5 id="3-SQL-创建-修改唯一索引"><a href="#3-SQL-创建-修改唯一索引" class="headerlink" title="3. SQL 创建/修改唯一索引"></a>3. SQL 创建/修改唯一索引</h5><ul><li><p><strong>创建</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UNIQUE</span> [INDEX <span class="operator">|</span> KEY] [<span class="operator">&lt;</span>索引名<span class="operator">&gt;</span>] [<span class="operator">&lt;</span>索引类型<span class="operator">&gt;</span>] (<span class="operator">&lt;</span>列名<span class="operator">&gt;</span>,…)</span><br></pre></td></tr></table></figure><p><strong>栗子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UNIQUE</span> KEY `unique_index`(`group_id`, `company_id`, `business_id`)</span><br></pre></td></tr></table></figure><p>注意事项：在创建唯一索引时，一定要保证索引的唯一性。如上面栗子的索引字段，保存数据时是重复的，此时索引创建会报错。</p></li><li><p><strong>修改</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `TableName` <span class="keyword">DROP</span> INDEX `INDEX_NAME`;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `TableName` <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> INDEX_NAME(`<span class="keyword">COLUMN</span>`);</span><br></pre></td></tr></table></figure><p><strong>栗子</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> follow_heart_store_sales_target_collect <span class="keyword">DROP</span> INDEX `unique_index`</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> follow_heart_store_sales_target_collect <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> KEY `unique_index`(`cdate`,`group_id`, `company_id`, `business_id`)</span><br></pre></td></tr></table></figure><p>注意：修改索引实际上是删除旧索引后，重新创建合适的索引。</p></li></ul><hr><h3 id="二、CTE-公共表表达式"><a href="#二、CTE-公共表表达式" class="headerlink" title="二、CTE(公共表表达式)"></a>二、CTE(公共表表达式)</h3><h5 id="1-什么是公用表表达式或CTE？"><a href="#1-什么是公用表表达式或CTE？" class="headerlink" title="1. 什么是公用表表达式或CTE？"></a>1. 什么是公用表表达式或CTE？</h5><ul><li>公用表表达式是一个命名的临时结果集(临时表)，仅在单个SQL语句(例如<a href="http://www.yiibai.com/mysql/select-statement-query-data.html">SELECT</a>，<a href="http://www.yiibai.com/mysql/insert-statement.html">INSERT</a>，<a href="http://www.yiibai.com/mysql/update-data.html">UPDATE</a>或<a href="http://www.yiibai.com/mysql/delete-statement.html">DELETE</a>)的执行范围内存在。</li><li><em>CTE</em>不作为对象存储，仅在查询执行期间持续。</li><li><em>CTE</em>可以是自引用(<a href="http://www.yiibai.com/mysql/recursive-cte.html">递归CTE</a>)，也可以在同一查询中多次引用。</li><li>与派生表相比，<em>CTE</em>提供了更好的可读性和性能。</li></ul><h5 id="2-CTE语法"><a href="#2-CTE语法" class="headerlink" title="2. CTE语法"></a>2. CTE语法</h5><ul><li><strong>CTE主要构成：</strong> <em>临时表名</em>，<em>展示临时表列</em> (不写默认展示所有)，<em>定义CTE的查询</em> (单个SQL语句)。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WITH</span> cte_name1[(column_list)] <span class="keyword">AS</span> (</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>单个<span class="keyword">SQL</span>语句(一般都是查询操作)</span><br><span class="line">),</span><br><span class="line">cte_name2 <span class="keyword">AS</span>[(column_list)] (</span><br><span class="line">    <span class="operator">/</span><span class="operator">/</span>单个<span class="keyword">SQL</span>语句</span><br><span class="line">),</span><br><span class="line">...</span><br><span class="line"><span class="keyword">SELECT</span> column_name1,[column_name2,...]</span><br><span class="line"><span class="keyword">FROM</span> cte_name1,cte_name2;</span><br></pre></td></tr></table></figure><hr><h3 id="三、MySQL8-0-窗口函数"><a href="#三、MySQL8-0-窗口函数" class="headerlink" title="三、MySQL8.0 窗口函数"></a>三、MySQL8.0 窗口函数</h3><h4 id="3-1-什么是窗口函数？"><a href="#3-1-什么是窗口函数？" class="headerlink" title="3.1 什么是窗口函数？"></a>3.1 什么是窗口函数？</h4><ul><li>窗口函数在MySQL8+才支持的函数，又称分析函数。</li><li>窗口函数 = 窗口 + 函数。</li><li>窗口的大小可以是固定的，也可以是可变的，还可以是滑动的。</li><li>窗口函数可以在查询出来的结果集(该结果集肯定满足某些条件)上，设置一个窗口，为窗口内的每条数据都执行一次窗口函数。</li><li>一般窗口函数对应的列，会紧跟结果集的后面。</li></ul><h4 id="3-2-窗口函数语法"><a href="#3-2-窗口函数语法" class="headerlink" title="3.2 窗口函数语法"></a>3.2 窗口函数语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windows_function([expression]) <span class="keyword">over</span>([<span class="keyword">partition</span> <span class="keyword">by</span>  <span class="operator">&lt;</span>分区的列<span class="operator">&gt;</span>] [<span class="keyword">order</span> <span class="keyword">by</span> <span class="operator">&lt;</span>排序的列<span class="operator">&gt;</span>] [<span class="keyword">rows</span> <span class="keyword">between</span> <span class="operator">&lt;</span>范围<span class="operator">&gt;</span>])</span><br></pre></td></tr></table></figure><ul><li><p>over中参数可省略。如果为空，则窗口的大小是满足where条件的所有数据大小。</p></li><li><p><strong>rows betweet的实例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rows</span> <span class="keyword">between</span> <span class="number">2</span> preceding <span class="keyword">and</span> <span class="keyword">current</span> <span class="type">row</span> <span class="comment">-- 取当前行和前面两行。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rows</span> <span class="keyword">between</span> unbounded preceding <span class="keyword">and</span> <span class="keyword">current</span> <span class="type">row</span> <span class="comment">-- 取当前行和前面所有行。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rows</span> <span class="keyword">between</span> <span class="keyword">current</span> <span class="type">row</span> <span class="keyword">and</span> unbounded following <span class="comment">-- 取当前行和后面所有行。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rows</span> <span class="keyword">between</span> <span class="number">3</span> preceding <span class="keyword">and</span> <span class="keyword">current</span> <span class="type">row</span> <span class="comment">-- 取当前行和前三行。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rows</span> <span class="keyword">between</span> <span class="number">3</span> precding <span class="keyword">and</span> <span class="number">1</span> following <span class="comment">-- 取当前行和前三行和后一行，共5行。</span></span><br></pre></td></tr></table></figure><ul><li>当省略 <strong>rows bteween</strong> ,则默认为 <code>rows between unbounded preceding and current row</code>。</li><li>当省略 <strong>order by 和 rows between</strong> , 则默认为 <code>rows between unbounded preceding and unbounded following</code></li></ul></li></ul><h4 id="3-3-窗口函数分类"><a href="#3-3-窗口函数分类" class="headerlink" title="3.3 窗口函数分类"></a>3.3 窗口函数分类</h4><ul><li>排名窗口函数<ul><li><strong>rank</strong></li><li><strong>dense_rank</strong></li><li><strong>percent_rank</strong></li><li><strong>row_number</strong>4</li><li><strong>ntile</strong></li><li><strong>cume_dist</strong></li></ul></li><li>取值窗口函数<ul><li><strong>lag</strong></li><li><strong>lead</strong></li><li><strong>first_value</strong></li><li><strong>last_value</strong></li><li><strong>nth_value</strong></li></ul></li><li>聚合窗口函数<ul><li><strong>ave</strong></li><li><strong>sum</strong></li><li><strong>count</strong></li><li><strong>max</strong></li><li><strong>min</strong></li></ul></li></ul><p><img src="D:\blog\source_posts\MySQL数据库常用SQL操作\image-20220119215508992.png" alt="image-20220119215508992"></p><p><img src="image-20220119215508992.png" alt="image-20220119215508992"></p><p><a href="https://tonydong.blog.csdn.net/article/details/106306454">SQL 窗口函数速查表_Tony.Dong的专栏-CSDN博客</a></p><h4 id="3-4-窗口函数应用"><a href="#3-4-窗口函数应用" class="headerlink" title="3.4 窗口函数应用"></a>3.4 窗口函数应用</h4><hr><h3 id="附录1：-windows命令行操作数据库"><a href="#附录1：-windows命令行操作数据库" class="headerlink" title="附录1： windows命令行操作数据库"></a>附录1： windows命令行操作数据库</h3><h4 id="1-命令行启动停止MySQL"><a href="#1-命令行启动停止MySQL" class="headerlink" title="1. 命令行启动停止MySQL"></a>1. 命令行启动停止MySQL</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net start/stop &lt;服务名称&gt;</span><br><span class="line">启动: net start mysql80</span><br><span class="line">停止: net stop mysql80</span><br></pre></td></tr></table></figure><h4 id="2-进入MySQL"><a href="#2-进入MySQL" class="headerlink" title="2.进入MySQL"></a>2.进入MySQL</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p -h localhost [-P 3308]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多线程</title>
      <link href="/2022/01/01/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/2022/01/01/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="1-多线程简介"><a href="#1-多线程简介" class="headerlink" title="1. 多线程简介"></a>1. 多线程简介</h2><p><img src="%E5%A4%9A%E7%BA%BF%E7%A8%8B-16417400928971.png" alt="多线程"></p>]]></content>
      
      
      <categories>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java常用API</title>
      <link href="/2022/01/01/Java%E5%B8%B8%E7%94%A8API/"/>
      <url>/2022/01/01/Java%E5%B8%B8%E7%94%A8API/</url>
      
        <content type="html"><![CDATA[<h1 id="1-String常用方法"><a href="#1-String常用方法" class="headerlink" title="1. String常用方法"></a>1. String常用方法</h1><h3 id="1-1-截取功能"><a href="#1-1-截取功能" class="headerlink" title="1.1 截取功能"></a>1.1 截取功能</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
